/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import controller.GreenhouseController;
import controller.GreenhouseController2;
import javax.swing.JOptionPane;
import model.UpdatetaskModel;
import view.EnterTreatment;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
/**
 *
 * @author Administrator
 */
public class UpdateTask extends javax.swing.JFrame {

    /**
     * Creates new form updatetask
     */
    public UpdateTask() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        plantid = new javax.swing.JTextField();
        viewharvest = new javax.swing.JButton();
        plantname = new javax.swing.JTextField();
        updatetasks1 = new javax.swing.JButton();
        updatetreatment = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        entertasks = new javax.swing.JButton();
        delete1 = new javax.swing.JButton();
        wateramount = new javax.swing.JTextField();
        nutrientamount = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        plantid.setBackground(new java.awt.Color(211, 216, 210));
        plantid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        plantid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantidActionPerformed(evt);
            }
        });
        getContentPane().add(plantid, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 120, 470, 50));

        viewharvest.setBorderPainted(false);
        viewharvest.setContentAreaFilled(false);
        viewharvest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewharvestActionPerformed(evt);
            }
        });
        getContentPane().add(viewharvest, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 390, 190, 70));

        plantname.setBackground(new java.awt.Color(211, 216, 210));
        plantname.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        plantname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plantnameActionPerformed(evt);
            }
        });
        getContentPane().add(plantname, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 470, 50));

        updatetasks1.setBorderPainted(false);
        updatetasks1.setContentAreaFilled(false);
        updatetasks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetasks1ActionPerformed(evt);
            }
        });
        getContentPane().add(updatetasks1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 190, 60));

        updatetreatment.setBorderPainted(false);
        updatetreatment.setContentAreaFilled(false);
        updatetreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetreatmentActionPerformed(evt);
            }
        });
        getContentPane().add(updatetreatment, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, 190, 60));

        Edit.setBorderPainted(false);
        Edit.setContentAreaFilled(false);
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });
        getContentPane().add(Edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 500, 170, 60));

        entertasks.setBorderPainted(false);
        entertasks.setContentAreaFilled(false);
        entertasks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entertasksActionPerformed(evt);
            }
        });
        getContentPane().add(entertasks, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 500, 170, 60));

        delete1.setBorderPainted(false);
        delete1.setContentAreaFilled(false);
        delete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete1ActionPerformed(evt);
            }
        });
        getContentPane().add(delete1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 500, 170, 60));

        wateramount.setBackground(new java.awt.Color(211, 216, 210));
        wateramount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        wateramount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wateramountActionPerformed(evt);
            }
        });
        getContentPane().add(wateramount, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 320, 470, 50));

        nutrientamount.setBackground(new java.awt.Color(211, 216, 210));
        nutrientamount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        nutrientamount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutrientamountActionPerformed(evt);
            }
        });
        getContentPane().add(nutrientamount, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 420, 470, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/updatetask copy.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewharvestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewharvestActionPerformed
        // TODO add your handling code here:
        ViewHarvest view = new ViewHarvest ();
        view.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_viewharvestActionPerformed

    private void updatetasks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetasks1ActionPerformed
        UpdateTask view = new UpdateTask ();
        view.setVisible(true);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_updatetasks1ActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        // TODO add your handling code here:
        try {
        // Get values from text fields
        String plantId = plantid.getText();
        String plantName = plantname.getText();
        String waterAmount = wateramount.getText();
        String nutrientAmount = nutrientamount.getText();
        
        // Validate input
        if (plantId.isEmpty() || plantName.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "Plant ID and Plant Name are required!", 
                "Error", 
                JOptionPane.ERROR_MESSAGE);
                        plantid.setText("");
            plantname.setText("");
            wateramount.setText("");
            nutrientamount.setText("");
            return;

        }
        
        // Create model object
        UpdatetaskModel plant = new UpdatetaskModel(
            Integer.parseInt(plantId),
            plantName,
            waterAmount,
            nutrientAmount
        );
        
        // Update through controller
        boolean success = GreenhouseController2.updatePlant(plant);
        
        if (success) {
            JOptionPane.showMessageDialog(this,
                "Plant information updated successfully!",
                "Success",
                JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this,
                "Update failed! Please verify Plant ID and Name exist.",
                "Error",
                JOptionPane.ERROR_MESSAGE);
        }
        
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this,
            "Invalid Plant ID format! Please enter a valid number.",
            "Error",
            JOptionPane.ERROR_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this,
            "An error occurred: " + e.getMessage(),
            "Error",
            JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_EditActionPerformed

    private void updatetreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetreatmentActionPerformed
        EnterTreatment view = new EnterTreatment ();
        view.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_updatetreatmentActionPerformed

    private void entertasksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entertasksActionPerformed
                   // TODO add your handling code here:
                   
        String plantid1 = plantid.getText();
        int plantid= Integer.parseInt(plantid1);
        String plantname1 = plantname.getText();
        String wateramount1 = wateramount.getText();
        String nutrientamount1 = nutrientamount.getText();
        
        UpdatetaskModel Plant = new UpdatetaskModel (plantid,plantname1,wateramount1,nutrientamount1);
        
        
        boolean response = GreenhouseController.insertenter(Plant);
        if(response == true){
            JOptionPane.showMessageDialog(UpdateTask.this,"Employee record has been saved suceessfully!",
                    "New Record",
                    JOptionPane.INFORMATION_MESSAGE);   
        }
        else{
            JOptionPane.showMessageDialog(UpdateTask.this,"The record could not be added!","Error",
                    JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_entertasksActionPerformed

    private void wateramountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wateramountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wateramountActionPerformed

    private void plantidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plantidActionPerformed

    private void plantnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plantnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plantnameActionPerformed

    private void nutrientamountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutrientamountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nutrientamountActionPerformed

    private void delete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete1ActionPerformed
        // TODO add your handling code here:
        DeleteupdatedTasks view = new DeleteupdatedTasks ();
        view.setVisible(true);
        this.dispose(); 
    }//GEN-LAST:event_delete1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateTask.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateTask().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Edit;
    private javax.swing.JButton delete1;
    private javax.swing.JButton entertasks;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField nutrientamount;
    private javax.swing.JTextField plantid;
    private javax.swing.JTextField plantname;
    private javax.swing.JButton updatetasks1;
    private javax.swing.JButton updatetreatment;
    private javax.swing.JButton viewharvest;
    private javax.swing.JTextField wateramount;
    // End of variables declaration//GEN-END:variables
}
