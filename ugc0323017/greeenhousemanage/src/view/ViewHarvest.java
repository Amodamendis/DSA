/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

/**
 *
 * @author Administrator
 */
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import model.InventoryModel2;
import controller.InventoryController2;
import controller.InventoryController;
import model.InventoryModel;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
public class ViewHarvest extends javax.swing.JFrame {

    /**
     * Creates new form viewharvestok
     */
    public ViewHarvest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        viewbutton = new javax.swing.JButton();
        viewharvest = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        updatetasks1 = new javax.swing.JButton();
        clearall = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        updatetreatment = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        viewbutton.setBorderPainted(false);
        viewbutton.setContentAreaFilled(false);
        viewbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbuttonActionPerformed(evt);
            }
        });
        getContentPane().add(viewbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 160, 50));

        viewharvest.setBorderPainted(false);
        viewharvest.setContentAreaFilled(false);
        viewharvest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewharvestActionPerformed(evt);
            }
        });
        getContentPane().add(viewharvest, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 190, 60));

        jTable1.setBackground(new java.awt.Color(211, 216, 210));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Greenhouse_ID", "Description", "Stock"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(372, 107, 880, 370));

        updatetasks1.setBorderPainted(false);
        updatetasks1.setContentAreaFilled(false);
        updatetasks1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetasks1ActionPerformed(evt);
            }
        });
        getContentPane().add(updatetasks1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 250, 180, 70));

        clearall.setBorderPainted(false);
        clearall.setContentAreaFilled(false);
        clearall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearallActionPerformed(evt);
            }
        });
        getContentPane().add(clearall, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 520, 170, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/viewharvest copy.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 800));

        updatetreatment.setBorderPainted(false);
        updatetreatment.setContentAreaFilled(false);
        updatetreatment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatetreatmentActionPerformed(evt);
            }
        });
        getContentPane().add(updatetreatment, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 190, 60));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void viewharvestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewharvestActionPerformed
        ViewHarvest view = new ViewHarvest ();
        view.setVisible(true);
        this.dispose();         // TODO add your handling code here:
    }//GEN-LAST:event_viewharvestActionPerformed

    private void updatetasks1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetasks1ActionPerformed
        UpdateTask view = new UpdateTask ();
        view.setVisible(true);
        this.dispose();           // TODO add your handling code here:
    }//GEN-LAST:event_updatetasks1ActionPerformed

    private void clearallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearallActionPerformed
        // TODO add your handling code here:
 int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to clear the database?", "Confirm", JOptionPane.YES_NO_OPTION);
    if (result == JOptionPane.YES_OPTION) {
        InventoryController2 controller = new InventoryController2();
        controller.clearDatabase();
        
        // Refresh the table after clearing the database
        List<InventoryModel2> inventoryList = controller.getAllInventory();
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); // Clear the table
        
        for (InventoryModel2 item : inventoryList) {
            model.addRow(new Object[]{
                item.getGreenhouseId(),
                item.getDescription(),
                item.getStock(),
                item.getNumber()
            });
        }
    }
    }//GEN-LAST:event_clearallActionPerformed

    private void updatetreatmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatetreatmentActionPerformed
        EnterTreatment view = new EnterTreatment ();
        view.setVisible(true);
        this.dispose();            // TODO add your handling code here:
    }//GEN-LAST:event_updatetreatmentActionPerformed

    private void viewbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbuttonActionPerformed
        // TODO add your handling code here
            InventoryController controller = new InventoryController();
    List<InventoryModel> inventoryList = controller.getAllInventory();
    
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    controller.updateTableModel(model, inventoryList);
    }//GEN-LAST:event_viewbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewHarvest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewHarvest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewHarvest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewHarvest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewHarvest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearall;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton updatetasks1;
    private javax.swing.JButton updatetreatment;
    private javax.swing.JButton viewbutton;
    private javax.swing.JButton viewharvest;
    // End of variables declaration//GEN-END:variables
}
